#
# Filters
#

filter backup {
    optical = false
    partition_table = false
    usage = filesystem
    uuid = 0ff8cf2f-030a-4ff8-b128-73dc1e322061
}

filter disks {
    optical = false
    partition_table = false
    usage = filesystem
}

filter burnable {
    optical = true
    optical_disc_closed = false
}

filter optical {
    optical = true
}

#
# Rules to apply
#

match backup {
    automount = true
    automount_options = sync
    post_mount_command = "notify-send 'Backup' 'mounted %device_file to %mount_point' && notify-send -u critical -t 10000 'Starting Backup' 'Do NOT remove the disk' && rsync -az --delete /home/me %mount_point/ && notify-send 'Backup finished' 'You can safely remove the disk' || notify-send -u critical -t 10000 'Backup Failed' 'Check what happened'"
    post_unmount_command = "notify-send 'Backup' 'unmounted %device_file from %mount_point'"
}

match disks {
    automount = true
    automount_options = { sync, noatime}
    post_mount_command = "notify-send 'disk' 'mounted %device_file to %mount_point'"
    post_unmount_command = "notify-send 'disk' 'unmounted %device_file from %mount_point'"
}

match burnable {
    #post_insertion_command = "k3b %device_file"
    post_mount_command = "notify-send 'burnable' 'mounted %device_file %mount_point'"
    post_insertion_command = "udisks --mount %device_file --mount-options ro"
}

match optical {
    automount = true
    automount_options = ro
    post_mount_command = "notify-send 'optical' 'mounted %device_file %mount_point'"
    post_insertion_command = "udisks --mount %device_file --mount-options ro"
}
