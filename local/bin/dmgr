#!/bin/bash

SESSIONSDIR=$HOME/.dtach

err(){
  >&2 echo "$@"
}

new(){
  session="$1-$(date +%Y-%m-%d_%H:%M:%S)"
  echo "Creating $session" && sleep 1
  dtach -Az "$SESSIONSDIR/$session" env DTACH=1 "$@"

  CURR_SESSION=$session
}

join(){
  session=$(ls -1 $SESSIONSDIR | fzf --prompt "Select session to join")
  echo "Joining $session" && sleep 1
  [ $? == 0 ] && dtach -az "$SESSIONSDIR/$session"

  CURR_SESSION=$session
}

join_last(){
  session=$(ls -1 $SESSIONSDIR | sort | tail -n1)
  echo "Joining $session" && sleep 1
  [ $? == 0 ] && dtach -az "$SESSIONSDIR/$session"

  CURR_SESSION=$session
}

_kill(){
  session=$(ls -1 "$SESSIONSDIR" | fzf --prompt "Select session to kill")
  [ $? != 0 ] && return
  sockinfo=$(ss -xlpH src "$SESSIONSDIR/$session" | awk -F' ' '{print $NF}')
  [ -z "$sockinfo" ] && \
    err "Could not identify process for $session" && return
  pid=$(echo "$sockinfo" | awk -F, '{print $2}' | sed 's/pid=//')
  echo "Killing $session" && sleep 1
  kill $pid
}

no_session(){
  [ -z "$(ls -1 $SESSIONSDIR)" ]
}

finished(){
  ! [ -S "$SESSIONSDIR/$1" ]
}

#prompt(){
#  valid_choices=$1
#  prompt=""
#  for choice in $(echo $valid_choices | tr '|' ' '); do
#    case $choice in
#      j)
#
#  done
#}

loop(){
  while true; do
    if ([ -n "$CURR_SESSION" ] && finished "$CURR_SESSION"); then
      join_last
      continue
    fi
    prompt="(J)oin | (k)ill | (n)ew | (q)uit "
    if no_session; then
      prompt="(N)ew | (q)uit "
    fi
    read -n1 -p "$prompt" choice
    choice=$(echo $choice | tr '[:upper:]' '[:lower:]')
    if no_session; then
      case $choice in
        j|k)
          choice="invalid"
          ;;
        "")
          choice="n"
          ;;
      esac
    fi
    case $choice in
      j)
        join
        ;;
      k)
        _kill
        ;;
      n)
        new $(basename $SHELL)
        ;;
      q)
        break
        ;;
      "")
        join
        ;;
      *)
        echo "Invalid choice"
        ;;
    esac
    echo -e "\033[1K"
    # TODO skip if invalid choice
    if no_session; then
      err "No session left"
      break
    fi
  done
}

if [ -n "$DTACH" ]; then
  err "You are already within a session"
  exit 1
fi

if [ -n "$1" ]; then
  new "$@"
fi

loop
