#!/bin/bash

SESSIONSDIR=$HOME/.dtach

err(){
  >&2 echo "$@"
}

msg(){
  echo -e "\033[1K"
  echo "$@"
}

name_session(){
  echo "$(basename $1)-$(date +%Y-%m-%d_%H:%M:%S)"
}

active(){
  [ -S "$SESSIONSDIR/$1" ]
}

has_client(){
  [ -n "$(ss -xH src $SESSIONSDIR/$1)" ]
}

select_session(){
  sessions="$(ls -1 $SESSIONSDIR)"
  [ -z "$sessions" ] && return 1
  shown=$(for session in $sessions; do
    if has_client $session; then
      echo "* $session"
    else
      echo "  $session"
    fi
  done)
  echo "$shown" | fzf --prompt "$@" | tr -d '* '
}

autoselect_session(){
  ls -1 $SESSIONSDIR | tail -n1
}

new(){
  session=$(name_session "$@")
  dtach -A "$SESSIONSDIR/$session" -r winch -z env DTACH=1 "$@"

  ACTIVE_SESSION=$session
}

join(){
  session=$(select_session "Select session to join")
  [ -z $session ] && return
  dtach -a "$SESSIONSDIR/$session"

  ACTIVE_SESSION=$session
}

join_last(){
  session=$(autoselect_session)
  [ -z $session ] && return
  msg "Auto-joining $session" && sleep 1
  dtach -a "$SESSIONSDIR/$session"

  ACTIVE_SESSION=$session
}

_kill(){
  session=$(select_session "Select session to kill")
  [ -z "$session" ] && return
  sockinfo=$(ss -xlpH src "$SESSIONSDIR/$session" | awk -F' ' '{print $NF}')
  [ -z "$sockinfo" ] && \
    err "Could not identify process for $session" && return
  pid=$(echo "$sockinfo" | awk -F, '{print $2}' | sed 's/pid=//')
  msg "Killing $session" && sleep 1
  kill $pid
}

has_sessions(){
  [ -n "$(ls -1 $SESSIONSDIR)" ]
}

loop(){
  while has_sessions; do
    if ! active "$ACTIVE_SESSION"; then
      join_last
      continue
    fi
    prompt="(J)oin | (k)ill | (n)ew | (q)uit "
    read -n1 -p "$prompt" choice
    [ -z $choice ] && choice=j
    choice=$(echo $choice | tr '[:upper:]' '[:lower:]')
    case $choice in
      j)
        join
        ;;
      k)
        _kill
        ;;
      n)
        new $SHELL
        ;;
      q)
        break
        ;;
      *)
        msg "Invalid choice"
        ;;
    esac
  done
  if ! has_sessions; then
    msg "No session left"
  fi
}

if [ -n "$DTACH" ]; then
  err "Already within a session"
  exit 1
fi

# Make sure there is at least one active session
if [ -z "$1" ]; then
  cmd="$SHELL"
else
  cmd="$@"
fi
new "$cmd"

loop
