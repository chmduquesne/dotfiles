#!/bin/bash

SESSIONSDIR=$HOME/.dtach

err(){
  >&2 echo "$@"
}

msg(){
    echo -e "\033[1K"
    echo "$@"
}

new(){
  session="$(basename $1)-$(date +%Y-%m-%d_%H:%M:%S)"
  dtach -Az "$SESSIONSDIR/$session" env DTACH=1 "$@"

  ACTIVE_SESSION=$session
}

join(){
  session=$(ls -1 $SESSIONSDIR | fzf --prompt "Select session to join")
  [ $? == 0 ] && dtach -az "$SESSIONSDIR/$session"

  ACTIVE_SESSION=$session
}

join_last(){
  session=$(ls -1 $SESSIONSDIR | sort | tail -n1)
  msg "Auto-joining $session" && sleep 1
  [ $? == 0 ] && dtach -az "$SESSIONSDIR/$session"

  ACTIVE_SESSION=$session
}

_kill(){
  session=$(ls -1 "$SESSIONSDIR" | fzf --prompt "Select session to kill")
  [ $? != 0 ] && return
  sockinfo=$(ss -xlpH src "$SESSIONSDIR/$session" | awk -F' ' '{print $NF}')
  [ -z "$sockinfo" ] && \
    err "Could not identify process for $session" && return
  pid=$(echo "$sockinfo" | awk -F, '{print $2}' | sed 's/pid=//')
  msg "Killing $session" && sleep 1
  kill $pid
}

has_sessions(){
  [ -n "$(ls -1 $SESSIONSDIR)" ]
}

finished(){
  [ -n "$1" ] && ! [ -S "$SESSIONSDIR/$1" ]
}

loop(){
  while has_sessions; do
    prompt="(J)oin | (k)ill | (n)ew | (q)uit "
    read -n1 -p "$prompt" choice
    choice=$(echo $choice | tr '[:upper:]' '[:lower:]')
    case $choice in
      j)
        join
        ;;
      k)
        _kill
        ;;
      n)
        new $SHELL
        ;;
      q)
        break
        ;;
      "")
        join
        ;;
      *)
        msg "Invalid choice"
        continue
        ;;
    esac
    if has_sessions && finished "$ACTIVE_SESSION"; then
      join_last
    fi
  done
  if ! has_sessions; then
    msg "No session left"
  fi
}

if [ -n "$DTACH" ]; then
  err "You are already within a session"
  exit 1
fi

# Make sure there is at least one active session
if [ -n "$1" ]; then
  new "$@"
elif ! has_sessions; then
  new $SHELL
fi

if [ -z "ACTIVE_SESSION" ]; then
  ACTIVE_SESSION=$(ls -1 $SESSIONSDIR | sort | tail -n1)
fi

loop
