#!env zsh
# Assumes the arguments are DNG files

CHOICES=($(yad \
    --center \
    --height 240 \
    --list \
    --checklist \
    --title "Merge and tonemap" \
    --text "Which tonemapping operators would you like to apply?" \
    --column "" --column "Operators" \
    True mantiuk06 \
    False mantiuk08 \
    True fattal02 \
    False durand02 \
    False pattanaik00 \
    False reinhard02 \
    False reinhard05))

[ $? -ne 0 ] && exit

OPERATORS=()
for c in $CHOICES; do
    OPERATORS+=($(echo $c | sed 's/TRUE|\(.*\)|/\1/'))
done

tonemap() {
    # Get the names of the first and last arguments
    FIRST=$1
    LAST=${@[$#]}

    # Create a directory to put the temporary files in
    TMP=$(mktemp -d)
    # Whenever the script ends (interruption/exit) this directory is deleted
    trap "rm -rf $TMP" INT QUIT TERM EXIT

    # Subdir to put aligned files in
    ALIGNED=$TMP/aligned
    mkdir $ALIGNED

    NAME=$(basename $FIRST .DNG)-$(basename $LAST .DNG)
    TIF_FILES=()

    # Convert all the files to tif, so that align_image_stack can handle them
    echo '#Converting the raw files to tif'
    for i in $@; do
        pfsin $i | pfsout $TMP/$i.tif
        TIF_FILES+=($TMP/$i.tif)
    done
    echo 25

    # Align and crop
    echo '#Aligning and cropping'
    align_image_stack -C -v -a $ALIGNED/ $TIF_FILES
    echo 50

    # Convert the whole deal to an hdr file
    echo '#Merging into an hdr file'
    pfsin $ALIGNED/*.tif | pfsout $TMP/$NAME.hdr
    echo 75

    #subdir to put tonemapped images in
    TONEMAPPED=$TMP/tonemapped
    mkdir $TONEMAPPED

    # Applying operators
    for operator in $OPERATORS; do
        echo "#Tonemapping: applying $operator"
        pfsin $TMP/$NAME.hdr  | pfstmo_$operator -v | pfsgamma -g 2.2 | pfsoutimgmagick -q 100 $TONEMAPPED/${operator}.png
    done

    # Convert the whole set to a gif
    convert $TONEMAPPED/* $NAME.gif
}

tonemap $@ | yad \
    --width 300 \
    --center \
    --title "Merge and tonemap" \
    --text="Merge and tonemap" \
    --progress \
    --auto-close \
    --auto-kill \
    --button=gtk-stop
